<div class="body-blackout"></div>

<div class="popup-modal shadow">
  <div>
    <i class="popup-modal__close"></i>
    <div id="popup-header">New Task</div>
    <span class="popup-label">Title</span>
    <input class="popup-input" id="name" placeholder="Ex: Create Baghdad online library">
    <span class="popup-label">Tags</span>
    <input class="popup-input" id="tags" placeholder="Ex: BACKEND">
    <span class="popup-label">Assignee</span>
    <input class="popup-input" id="assignee" placeholder="Ex: Al Khwarizmi" ">
    <span class="popup-label">Start Date</span>
    <input class="popup-input" id="start" placeholder="Ex: 05/20/2020 23:59:59 GMT+7">
    <span class="popup-label">End Date</span>
    <input class="popup-input" id="end" placeholder="Ex: 05/20/2020 23:59:59 GMT+7">
  </div>
  <div class="button-container">
    <button id="popup-modal-button">Add</button>
  </div>
</div>

<div class="container-fluid">
  <div class="left-bar">
     <input id="search">
     <div class="profile">
       <img src="https://images.unsplash.com/photo-1581711966454-64163c64fd20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80" class="profile-icon">
       <div>
         <p>Fatemeh Fairuze</p>
         <p>Project Manager</p>
       </div>
     </div>
  </div>
  <div class="central-board">
    <div class="top-bar">
      <div class="left-top-bar">
        <img src="https://media-exp1.licdn.com/dms/image/C510BAQFACMedGj9Sog/company-logo_200_200/0?e=2159024400&v=beta&t=FyjT0QYjkG8Frc-hoR7n3YnSpYxnlBOXAKlLftxffrQ" id="logo">
        <div id="bar-title">Kanban Prosa</div>
      </div>
    <div class="right-top-bar">
      <img src="https://images.unsplash.com/photo-1581711966454-64163c64fd20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80" class="member-icon">
      <img src="https://images.unsplash.com/photo-1581711966454-64163c64fd20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80" class="member-icon">
      <img src="https://images.unsplash.com/photo-1581711966454-64163c64fd20?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=334&q=80" class="member-icon">
      <div id="member-number">1000+ Members</div>
    </div>
    </div>
    <div id="myKanban"></div>
  </div>
</div>

<script>
var reformatItems = () => {
    var items = document.getElementsByClassName('kanban-item')
    for(item of items) {
        var id = item.getAttribute("data-eid")
        name = item.getAttribute("data-name")
        tags = item.getAttribute("data-tags")
        assignee = item.getAttribute("data-assignee").split(' ').map(w => w[0]).join('')
        now = new Date().getTime()
        end = (new Date(item.getAttribute("data-end"))).getTime()
        deadline = Math.round((end-now)/1000/60/60/24)
        item.innerHTML = `
          <div id="item-header">
            <b>${name}</b>
            <div>
              <button class="delete-item-button" id="delete-item-${id}" data-itemId=${id}>
              <img class="delete-item-logo" src="https://b1.pngbarn.com/png/234/595/black-resourcesforbitches-black-x-png-clip-art-thumbnail.png"
              </button>
            </div>
          </div>
          <div id="item-meta">
            <div>
              <span class="item-meta-1 item-assignee">${assignee}</span>
              <span class="item-meta-1 item-tags">${tags}</span>
            </div>
            <span>${deadline} day(s)</span>
          </div>`
    }
    for(item of document.getElementsByClassName("item-tags")){
      switch(item.innerText){
        case "BACKEND":
          item.style.background = "#FFCDD2"
          item.style.color = "#E53935"
          break
        case "FRONTEND":
          item.style.background = "#FFE0B2"
          item.style.color = "#FB8C00"
          break
        case "DATA SCIENTIST":
          item.style.background = "#BBDEFB"
          item.style.color = "#1E88E5"
          break
        default:
          item.style.background = "#E1BEE7"
          item.style.color = "#8E24AA"
          break
      }
    }
}

var sendRequest = (data, endpoint) => {
    $.ajax({
      url: `http://35.240.215.208:3000/${endpoint}`,
      type:"POST",
      data: JSON.stringify(data),
      contentType: 'application/json'
    }).done(function (data) {
      console.log(data)
    }).fail(function (jqXHR, textStatus, errorThrown) {
      alert(errorThrown)
      console.log(errorThrown)
    })
}

var initDeleteListener = (boards) => {
    var ids = [... boards.getBoardElements('_backlog'), ... boards.getBoardElements('_todo'), ... boards.getBoardElements('_done')].map(b => b.dataset.eid)
    for(let id of ids) {
      document.getElementById(`delete-item-${id}`).addEventListener('click', () => {
        var boardId = boards.findElement(id).parentElement.parentElement.dataset.id
        console.log(boardId)
        boards.removeElement(id)
        sendRequest({
          "item-id" : id,
          "board-id" : boardId
        }, "delete")
      })
    }
}

var parsed_boards = []
<% for(board of JSON.parse(boards)){ %>
    var temp = {
        "id" : "<%= board.id %>",
        "title": "<%= board.title %>",
        "item": []
    }
    <% for(i = 0; i < board.item.length ; i++){ %>
        temp.item.push({
            "id" : "<%= board.item[i].id %>",
            "name" : "<%= board.item[i].name %>",
            "assignee" : "<%= board.item[i].assignee %>",
            "tags" : "<%= board.item[i].tags %>",
            "start" : "<%= board.item[i].start %>",
            "end" : "<%= board.item[i].end %>"
        })
    <% } %>
    parsed_boards.push(temp)
<% } %>

var KanbanProsa = new jKanban({
    element         : '#myKanban',
    gutter          : '10px',
    addItemButton   : true,
    buttonContent   : `+ Add Task`,
    click           : function(el){
        // alert(el.dataset.eid)
    },
    dropEl          : function (el, target, source, sibling) {
        sendRequest({
          "item-id"      : el.dataset.eid,
          "btarget-id"   : target.parentElement.dataset.id,
          "bsource-id"   : source.parentElement.dataset.id,
          "btarget-items": [... target.children].map(c => {
                              let child = Object.assign({}, c.dataset)
                              child.id = child.eid
                              delete child.eid
                              return child
                           })
        }, "update")
    },
    buttonClick     : function(el, boardId) {
        const bodyBlackout = document.querySelector('.body-blackout')
        const popupModal = document.querySelector('.popup-modal')
        const modalButton = document.getElementById('popup-modal-button')

        var modalListener = () => {
            popupModal.classList.remove('is--visible')
            bodyBlackout.classList.remove('is-blacked-out')
            itemId = (new Date()).getTime()

            KanbanProsa.addElement(
                boardId,
                {
                    "id" : itemId,
                    "name" : document.getElementById('name').value,
                    "assignee" : document.getElementById('assignee').value,
                    "tags" : document.getElementById('tags').value,
                    "start" : document.getElementById('start').value,
                    "end" : document.getElementById('end').value
                }
            )
            items = [... KanbanProsa.findBoard(boardId).children[1].children].map(c => {
              let child = Object.assign({}, c.dataset)
              child.id = child.eid
              delete child.eid
              return child
            })
            sendRequest({
              "board-id"  : boardId,
              "board-items"   : items
            }, "create")

            reformatItems()
            initDeleteListener(KanbanProsa)
            modalButton.removeEventListener('click', modalListener)
        }

        popupModal.classList.add('is--visible')
        bodyBlackout.classList.add('is-blacked-out')

        popupModal.querySelector('.popup-modal__close').addEventListener('click', () => {
           popupModal.classList.remove('is--visible')
           bodyBlackout.classList.remove('is-blacked-out')
        })

        bodyBlackout.addEventListener('click', () => {
          popupModal.classList.remove('is--visible')
          bodyBlackout.classList.remove('is-blacked-out')
          modalButton.removeEventListener('click', modalListener)
        })

        modalButton.addEventListener('click', modalListener)
    },
    boards  : parsed_boards
});

reformatItems()
initDeleteListener(KanbanProsa)

</script>
</body>